rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Guidelines collection
    match /guidelines/{id} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Summaries collection
    match /summaries/{id} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Keywords collection
    match /keywords/{id} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Condensed collection
    match /condensed/{id} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // Sessions collection
    match /sessions/{sessionId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow update: if isAuthenticated() && isOwner(resource.data.userId);
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // Session guidelines collection
    match /sessionGuidelines/{id} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow write: if isAuthenticated() && isOwner(request.resource.data.userId);
    }

    // Guideline checks collection
    match /guidelineChecks/{id} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow write: if isAuthenticated() && isOwner(request.resource.data.userId);
    }

    // Dynamic advice collection
    match /dynamicAdvice/{sessionId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow update: if isAuthenticated() && isOwner(resource.data.userId);
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // User data collection (for chat history and preferences)
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      
      // Chat history subcollection
      match /chatHistory/{chatId} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Existing rules
    match /disclaimerAcceptance/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}